library(date)
library(tidyverse)
library(dplyr)
##dirr is where the data files are
dirr<- ""
setwd(dirr)

BASF<-read.csv(paste(dirr,"/BASFY.csv",sep=""))$Return
Total<-as.numeric(read.csv(paste(dirr,"/TOT.csv",sep=""))$Return)
Siemens<-read.csv(paste(dirr,"/SIEGY.csv",sep=""))$Return
Sanofi<-read.csv(paste(dirr,"/SNY.csv",sep=""))$Return
time=read.csv(paste(dirr,"/SNY.csv",sep=""))$Date %>% as.character() %>% as.date(order="ymd")
returns<-data.frame(cbind(time,BASF,Total,Siemens,Sanofi))
returns<-returns[-1,]


par(mfrow=c(2,2))
plot(returns[,1],returns[,2],type='l')
plot(returns[,1],returns[,3],type='l')
plot(returns[,1],returns[,4],type='l')
plot(returns[,1],returns[,5],type='l')


#run wbs
set.seed(75422)
source("C:/Users/12RAM/OneDrive/Documents/research/PhD Thesis/Change Point R Codes/WBS Codes/WBS_function_June.R")
Rcpp::sourceCpp('C:/Users/12RAM/OneDrive/Documents/research/PhD Thesis/Change Point R Codes/PELT Codes/PELT_CPP.cpp')

source("C:/Users/k3ramsay/OneDrive/Documents/research/PhD Thesis/Change Point R Codes/WBS Codes/WBS_function_June.R")
Rcpp::sourceCpp('C:/Users/k3ramsay/OneDrive/Documents/research/PhD Thesis/Change Point R Codes/PELT Codes/PELT_CPP.cpp')



intervals<-getIntervals(1:nrow(returns),700)
intervals<-rbind(intervals,c(1,1259))
# cdf(1.35)
thresh<-1.22
# 18Jul2007 5Sep2008  8Dec2008  1May2009  25Aug2009 20Apr2010 8Jul2010  25Jul2011

depth="hs"
depth="mahal75"
depth="spat"
depth="mahal"
dat<-returns[,2:5]

cp1<-WBS(intervals ,1,1259,thresh,dat,depth)
cp<-cp1 %>% getScwartzCriterias(data=dat,depth=depth) %>% applySCH(N=nrow(dat),alpha=.75)
cp
time[sort(cp)]


# source("C:/Users/k3ramsay/OneDrive/Documents/research/PhD Thesis/Change Point R Codes/PELT CP KW.R")
# Rcpp::sourceCpp('C:/Users/k3ramsay/OneDrive/Documents/research/PhD Thesis/Change Point R Codes/PELT_CPP.cpp')


depthsH<-depth.halfspace(dat,dat)
depthsS<-depth.spatial(dat,dat)
depthsM<-depth.Mahalanobis(dat,dat)
depthsM75<-depth.Mahalanobis(dat,dat,"MCD")

ranksH<-rank(depthsH)
cp_PELTH<-PELT_T(ranksH,1.5*log(length(ranksH)))
ranksS<-rank(depthsS)
cp_PELTS<-PELT_T(ranksS,1.5*log(length(ranksS)))
ranksM<-rank(depthsM)
cp_PELTM<-PELT_T(ranksM,1.5*log(length(ranksM)))
ranksM75<-rank(depthsM75)
cp_PELTM75<-PELT_T(ranksM75,1.5*log(length(ranksM75)))

time[cp_PELTH]
time[cp_PELTS]
time[cp_PELTM]
time[cp_PELTM75]



cp_PELT=cp_PELTS[-1]
cp_PELT

# beepr::beep()
########
a<-c("#cc0066","#cc6600","#003300")
par(mfrow=c(1,1),mgp=c(2.5,1,0))

pdf(file="R1_S.pdf",height=6,width=10)
plot(time[-1],returns[,2],type='l',xlab="Date",ylab=names(returns)[2],bty="n",cex.lab=1.25,cex.axis=1.25)
abline(v=returns[cp,1],col="#cc6600",lwd=2)
dev.off()

pdf(file="R2_S.pdf",height=6,width=10)
plot(time[-1],returns[,3],type='l',xlab="Date",ylab=names(returns)[3],bty="n",cex.lab=1.25,cex.axis=1.25)
abline(v=returns[cp,1],col="#cc6600",lwd=2)
dev.off()

pdf(file="R3_S.pdf",height=6,width=10)
plot(time[-1],returns[,4],type='l',xlab="Date",ylab=names(returns)[4],bty="n",cex.lab=1.25,cex.axis=1.25)
abline(v=returns[cp,1],col="#cc6600",lwd=2)
dev.off()

pdf(file="R4_S.pdf",height=6,width=10)
plot(time[-1],returns[,5],type='l',xlab="Date",ylab=names(returns)[5],bty="n",cex.lab=1.25,cex.axis=1.25)
abline(v=returns[cp,1],col="#cc6600",lwd=2)
dev.off()



#PELT

########
a<-c("#cc0066","#cc6600","#003300")
par(mfrow=c(1,1),mgp=c(2.5,1,0))

pdf(file="R1_BOTH.pdf",height=6,width=10)
plot(time[-1],returns[,2],type='l',xlab="Date",ylab=names(returns)[2],bty="n",cex.lab=1.25,cex.axis=1.25)
abline(v=returns[cp_PELT,1],col="#cc6600",lwd=2)
abline(v=returns[cp,1],col=a[1],lwd=2,lty=2)
dev.off()

pdf(file="R2_BOTH.pdf",height=6,width=10)
plot(time[-1],returns[,3],type='l',xlab="Date",ylab=names(returns)[3],bty="n",cex.lab=1.25,cex.axis=1.25)
abline(v=returns[cp_PELT,1],col="#cc6600",lwd=2)
abline(v=returns[cp,1],col=a[1],lwd=2,lty=2)
dev.off()

pdf(file="R3_BOTH.pdf",height=6,width=10)
plot(time[-1],returns[,4],type='l',xlab="Date",ylab=names(returns)[4],bty="n",cex.lab=1.25,cex.axis=1.25)
abline(v=returns[cp_PELT,1],col="#cc6600",lwd=2)
abline(v=returns[cp,1],col=a[1],lwd=2,lty=2)
dev.off()

pdf(file="R4_BOTH.pdf",height=6,width=10)
plot(time[-1],returns[,5],type='l',xlab="Date",ylab=names(returns)[5],bty="n",cex.lab=1.25,cex.axis=1.25)
abline(v=returns[cp_PELT,1],col="#cc6600",lwd=2,lty=1)
abline(v=returns[cp,1],col=a[1],lwd=2,lty=2)
dev.off()





covMat<-list()
for(i in 1:(length(cp)+1)){
  if(i==1)
    covMat[[i]]<-10000*cov(returns[1:cp[1],2:5])
  else if(i==(length(cp)+1))
    covMat[[i]]<-10000*cov(returns[cp[i-1]:1259,2:5])
  else
    covMat[[i]]<-10000*cov(returns[cp[i-1]:cp[i],2:5])
}
covMat
#10x6.5
ovT<-c()
for(i in 1:(length(cp)+1)){
  ovT<-rbind(ovT,c(covMat[[i]])[c(1:4,2:4+4,3:4+8,16)])
}


par(mfrow=c(1,1))
par(mfrow=c(1,1),mgp=c(2.5,1,0))
matplot(ovT,type='l',lwd=2,ylab="Parameter Value",xlab="Time Period",lty=1,bty="n",col=a,cex.lab=1.25,cax.axis=1.2)
abline(v=1:length(cp),lty=2)
matplot(ovT,type='l',ylim=c(0,20))
abline(v=1:length(cp))

time[sort(cp)]
cp1<-cp1[order(cp1[,2],decreasing = T),]
cp1[1:length(cp),]


##PELT

covMat_PELT<-list()
for(i in 1:(length(cp_PELT)+1)){
  if(i==1)
    covMat_PELT[[i]]<-10000*cov(returns[1:cp_PELT[1],2:5])
  else if(i==(length(cp_PELT)+1))
    covMat_PELT[[i]]<-10000*cov(returns[cp_PELT[i-1]:1259,2:5])
  else
    covMat_PELT[[i]]<-10000*cov(returns[cp_PELT[i-1]:cp_PELT[i],2:5])
}
covMat_PELT
#10x6.5
ovT_PELT<-c()
for(i in 1:(length(cp_PELT)+1)){
  ovT_PELT<-rbind(ovT_PELT,c(covMat_PELT[[i]])[c(1:4,2:4+4,3:4+8,16)])
}



matplot(ovT_PELT,cex=1.2,ylab="Parameter Value",xlab="Time Period",pch=21,bty="n",col=a[2],bg=a[2],cex.lab=1.25,cax.axis=1.2)
matpoints(ovT,col=a[1],bg=a[1],cex=1.2,pch=2)


par(mfrow=c(1,1))
par(mfrow=c(1,1),mgp=c(2.5,1,0))
pdf(file="Cov_OT_BOTH.pdf",height=10,width=10)
matplot(ovT_PELT,type='l',lwd=2,ylab="Parameter Value",xlab="Time Period",lty=1,bty="n",col=a[2],cex.lab=1.5,cax.axis=1.6)
matlines(ovT,col=a[1],lty=2,lwd=2)
dev.off()
abline(v=1:length(cp_PELT),lty=2)
matplot(ovT_PELT,type='l',ylim=c(0,40))
abline(v=1:length(cp_PELT))

time[sort(cp_PELT)]
cp1_PELT<-cp1_PELT[order(cp1_PELT[,2],decreasing = T),]
cp1_PELT[1:length(cp_PELT),]




depth="mahal"


#solution path

getCP<-Vectorize(function(alpha){
  WBS(intervals ,1,1259,thresh,dat,depth) %>% getScwartzCriterias(data=dat,depth=depth) %>% applySCH(N=nrow(dat),alpha=alpha)
})

alphas<-seq(2,0.005,length.out = 10)
result<-getCP(alphas)
# result2<-getCP(c())
beepr::beep()
result

k=(1:20000)
cdf<-function(q){1+2*sum(((-1)^k)*exp(-2*k^2*q^2))}
qBB<-function(p){return(uniroot(function(q){cdf(q)-p},c(1,2.5))$root)}

#sBonf correction
Bon_Corr<-function(cp,alpha=.05){
  cp<-cp[order(cp[,2],decreasing = T),]
  inds<-cp[,1]
  new_thresh=qBB(1-alpha/length(inds))
  return(inds[cp[,2]>new_thresh])
}
BH_Corr<-function(cp,alpha=.05){
  cp<-cp[order(cp[,2],decreasing = T),]
  inds<-cp[,1]
  alphas<-alpha/(length(inds)+1-1:length(inds))
  new_thresh=sapply(1-alphas,qBB)
  
  pass<-mapply('>',cp[,2],new_thresh)
  #first failing ind
  ff<-which(!pass)[1]
  
  #none fail
  if(is.na(ff))
    return(inds)
  else if(ff==1)
    return(NULL)
  else
    return(inds[1:(ff-1)])
}

BH_Corr(cp1[1:length(cp),])
Bon_Corr(cp1[1:length(cp),])



